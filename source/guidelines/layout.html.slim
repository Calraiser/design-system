---
page_title: Layout, basic rules
description: Consider making layouts fluid and adaptive by default cause not every user will have their desktop browser maximized. This 12-column responsive grid provides the structure for websites and LUCA tools content, with flexible column widths and fixed gutters.
layout: content
index: true
---

.content
  h1.bx--type-h1 = current_page.data.page_title
  p.bx--type-p.description = current_page.data.description

  h2.bx--type-h4.u-text-blue Usability
  p.bx--type-p
    | When to use:
    ul.e-list
      li Almost always use a grid layout â€” visitors can read more quickly on pages that use grids. Choose a single grid system for your entire site.
      li Avoid mixing this grid and other grid systems.

  .content-block
    h2.bx--type-p.u-uppercase.u-pb-4 Structure of modules & Read order/Layout
    .d-flex
      = svg_tag 'layout-mobile.svg'
      = svg_tag 'layout-tablet.svg'
      = svg_tag 'layout-labtop.svg'
      = svg_tag 'layout-desktop.svg'

  .content-block
    h2.bx--type-p.u-uppercase structure of content
    .layout-legend
      .legend-item.d-flex
        span.search-bar
        p.bx--type-p Search bar
      .legend-item.d-flex
        span.app-nav
        p.bx--type-p App Navigation
      .legend-item.d-flex
        span.main-nav
        p.bx--type-p Main navigation & Sidebar
      .legend-item.d-flex
        span.content-l
        p.bx--type-p Content

    .d-flex
      .image
        = svg_tag 'single-column-gp.svg'
        p.note
          | Single Column with global and app navigation.
      .image
        = svg_tag 'two-column-gp.svg'
        p.note
          | Two Column with global and app navigation.
      .image
        = svg_tag 'single-column-gn.svg'
        p.note
          | Single Column with Global navigation.
      .image
        = svg_tag 'two-column-apn.svg'
        p.note
          | Two Column with app navigation.

    h1.bx--type-h1 Grid & breakpoints

    p.bx--type-p.description
      | We use the grid to create a visual structure with content, rather than relying heavily on boxes and lines. This reduces the amount of elements a user needs to scan in order to digest the content on the screen. We have a defined set of columns that content and UI elements align to. The space between columns is called a "gutter". The column widths are fixed and scale when there isn't enough space available on the screen. The gutters, however, are fixed and only scale when the text size scales to maintain a distinct and legible separation of content. There are 3 different gutter sizes to allow for different types of content: compact, cozy, and comfortable.

    h2.bx--type-h4.u-text-blue Responsive breakpoints

    .text-group
      p.bx--type-p
        | This 12 / 8 / 4 column system (desktop, tablet, mobile), is a responsive grid provides structure for build tools for LUCA and distribute content on websites. The simplest layout is a single block of text that spans 12 columns, but the layout can be scaled to use the remaining 8 or 4 columns if there is a need for primary and secondary information in order to have a better look & feel, and a consistent experience as user.
      p.bx--type-p
        | For optimal user experience, LUCA Design System user interfaces should adapt layouts for the following 4 breakpoint widths: 0-768dp, 768-1280dp, 1280-1920dp and 1920dp-3000dp.
      p.bx--type-p.u-pt-4
        | Mobile devices, including tablets, vary greatly in size, but even more dramatic is the difference in desktop and laptop machines. The overwhelming majority of users are using their screen in a landscape configuration, so our breakpoints are based on the browser window's width. This allows for content to be optimized on both small and larger screens in response to this value.

  .content-block
    h2.bx--type-p.u-uppercase Fixed grid

    .d-flex
      .text-column
        p.bx--type-p.u-pb-4
          | 12 columns model  >  Desktop
        p.bx--type-p
          | Width 1280px - 1920 px > column width of 85px. / gutter 20-24px max.
        p.bx--type-p
          | Width 1920 -3000 px > column width max of 121 px. / gutter 36px max.

      .text-column
        p.bx--type-p
          | 8 columns  >  Tablet (landscape. On portrait use mobile grid, 4 column).
        p.bx--type-p.u-pb-4
          | Width 768px - 1280 px > 8 column width of xpx. / gutter xpx max.
        p.bx--type-p
          | 4 columns > Mobile (landscape. On portrait use 1 column).
        p.bx--type-p
          | Width 0 -768 px > 4 column.

    .content-image
      = svg_tag 'fixed-grid.svg'

    .d-flex
      .text-column
        h4.bx--type-h4 Rules and summary view content in layouts (min. screen widths)
        p.bx--type-p
          | Layouts under 600dp wide may fill the screen with a single level of content hierarchy (either summary or detail content, but not both).
        p.bx--type-p
          | Layouts over 600dp wide may place two levels of content hierarchy on the screen (both summary and detail content).

      .text-column
        h4.bx--type-h4 Max screen widths
        p.bx--type-p.u-pb-4
          | Layouts over 1600dp wide may let the layout grow until it hits a max width. At this point, the grid may do one of the following:
        ul.e-list
          li Become center aligned with increased margins
          li Remain left aligned while the right margin grows
          li Continue to grow while revealing additional content

    .content-image
      = svg_tag 'layout-grid02.svg'

    .action.downloads
      = partial :"components/_downloads", :locals => { :name => 'GRIDS_LAYOUTS_download', :sketch => true }
