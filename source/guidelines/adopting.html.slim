---
page_title: Adopting a Design System
description: At LUCA, we want to create friendly experiences for our users. We define a simple attractive design, cool interactions at the source and then apply the solutions consistently across our product portfolio, trying to make sure people only have to learn them once. The LUCA Design System is plastic, flexible and allows for gradual adoption by our product teams. The UX Design team of LUCA Product Portfolio Department watches and control the adoption process across LUCA product portfolio progress across steps on each tool.

layout: content
index: true
---

.p-adopting.content
  h1.bx--type-h1 = current_page.data.page_title
  p.bx--type-p = current_page.data.description

  picture.image-block
    = image_tag 'adopting-overview.png'

  p.bx--type-p.text-light.u-pt-4
    | The LDS reflects the style guides, patterns, and components that underpin the LUCA Product Portfolio. These patterns and components provide a tone and unified language, and consistent look and feel when designing products within the LUCA ecosystems that consolidate the LUCA Product Portfolio.

  .content-block.u-pt-5
    h2.bx--type-h4 Steps
    p.bx--type-p
      | The Design System is adopted per product across gradual steps in priority order. These steps serve as milestones to track adoption across all products no matter the pace of an individual product team.

    .steps-header
      h3.bx--type-h4.u-uppercase.u-text-blue Step
      h3.bx--type-h4.u-uppercase.u-text-blue Criteria

    .steps-container
      .step-block
        = image_tag 'steps/step-1.png'
        p.bx--type-p
          | Detect the problem
        p.bx--type-p
          | Non adopter

      .criteria-block
        ul.e-list
          li Branding / visual language is out of date.
          li Product is obviously not complying with System.
          li Interface is dated and inconsistent with latest conventions.

      .step-block
        = image_tag 'steps/step-2.png'
        h2.bx--type-h4.u-uppercase Step 1
        p.bx--type-p
          | Plan: backlog and roadmap

      .criteria-block
        ul.e-list
          li Review codebase dependency.
          li Compiled assets –and redesign if is necessary– and customize for integration.
          li Commitment and rules for process adoption.

      .step-block
        = image_tag 'steps/step-3.png'
        h2.bx--type-h4.u-uppercase Step 2
        p.bx--type-p
          | Basics: Visual language

      .criteria-block
        ul.e-list
          li Lines, spaces-margins, colour & typography.
          li Review illustrations, pictures and iconography.
          li Primary UI structure-components: navigation icons, nav. bar, header and footer.

      .step-block
        = image_tag 'steps/step-4.png'
        h2.bx--type-h4.u-uppercase Step 3
        p.bx--type-p
          | Plan: Basic UI components

      .criteria-block
        ul.e-list
          li Buttons, primary, secondary, radio, check, switch and select.
          li Forms: labels, text fields.
          li List groups and data tablets.

      .step-block
        = image_tag 'steps/step-5.png'
        h2.bx--type-h4.u-uppercase Step 4
        p.bx--type-p
          | Plan: Full priority components

      .criteria-block
        ul.e-list
          li Cards, tooltips & modals.
          li Notifications & Alerts system.
          li Dialog, chat & FAQ.

      .step-block
        = image_tag 'steps/step-6.png'
        h2.bx--type-h4.u-uppercase Step 5
        p.bx--type-p
          | Plan: Full adoption

      .criteria-block
        ul.e-list
          li Basic charts.
          li Simple visualizations.
          li Complex visualizations.

      .step-block
        = image_tag 'steps/step-7.png'
        h2.bx--type-h4.u-uppercase Step 6
        p.bx--type-p
          | Plan: Extra materials

      .criteria-block
        ul.e-list
          li Onboarding.
          li Walkthrough.
          li Tutorials (motion).
          li Documentation.

  .content
    h1.bx--type-h1 Atomic design
    p.bx--type-p.u-pb-5
      | Atomic design is a design system which objective is to organize the components in hierarchy to build interfaces and to have a usefull organization. It helps to the developers to build the code in an easy and clear way, facilitating to visualize and translate the design to a code more directly. In addition, it helps designers in the communication and to find and control changes or problems that could appear when the design is being programmed.

    .content-block
      h2.bx--type-h4
        | Atomic hierarchy
      p.bx--type-p
        | This is the actual hierarchy, from the smallest to the largest element (it is suitable to add more elements if it would be necessary):

    .content-block
      .row.center-xs.around-xs
        .col-xs-6.col-sm-2
          = image_tag 'atomic_design/atom@3x.png', class: 'image-100'
          p.bx--type-note_light.u-uppercase.u-pt-3
            | Atom

        .col-xs-6.col-sm-2
          = image_tag 'atomic_design/molecule@3x.png', class: 'image-100'
          p.bx--type-note_light.u-uppercase.u-pt-3
            | Molecule

        .col-xs-6.col-sm-2
          = image_tag 'atomic_design/organism.png', class: 'image-100'
          p.bx--type-note_light.u-uppercase.u-pt-3
            | Organism

        .col-xs-6.col-sm-2
          = image_tag 'atomic_design/system@3x.png', class: 'image-100'
          p.bx--type-note_light.u-uppercase.u-pt-3
            | System


    .content-block
      h2.bx--type-h4.u-text-blue.u-uppercase
        | Atoms
      p.bx--type-p
        | Atoms are  the smallets elements or with a low hierarchy. An atom is an element that does not make sense by itself and needs to cohabit with others atoms to make it. An atom should be named, defined and enclosed for margins to know how is its behaviour when being joined with other atoms.

    .content-block
      .row
        .col-xs-12.col-sm-4.col-lg-2
          = link_to 'ok', '#', class: 'c-btn btn-primary btn-small'
          p.bx--type-p.small.u-pt-3
            | Atom (button)

    .content-block
      h2.bx--type-h4.u-text-blue.u-uppercase
        | Molecules
      p.bx--type-p
        | When two or more atoms come together, they create molecules. A molecule is the element that begins to be used in isolation. A molecule offers enough information to guide an action within the interface. A molecule must be defined and bounded again to be able to know how it behaves in coexistence with its peers.

    .content-block
      .row.actions
        = link_to 'cancel', '#', class: 'c-btn btn-primary inverse btn-small'
        = link_to 'ok', '#', class: 'c-btn btn-primary btn-small'
      p.bx--type-p.small.u-pt-3
        | Atom (button) + Atom(button) = Molecule

    .content-block
      h2.bx--type-h4.u-text-blue.u-uppercase
        | Organisms
      p.bx--type-p
        | They are formed by two or more molecules and form a section or part of our product. The organisms offer a complete experience to the user.

    .content-block
      .row
        .col-xs-12
          == partial :"components/_modal", :locals => { :id => 'example', :close => true, :text => 'Donec facilisis tortor ut augue lacinia, at viverra est semper. Sed sapien metus, scelerisque nec pharetra id, tempor a tortor. Pellentesque non dignissim neque. Ut porta viverra est, ut dignissim elit elementum ut. Nunc vel rhoncus nibh, ut tincidunt turpis. Integer ac enim pellentesque, adipiscing metus id, pharetra odio. ', :heading => 'Welcome to your account', :textlabel => 'LUCA Comms', :check => false, :btnTxt => 'Ok', :secondbtnTxt => 'Cancel', :secondbtn => true, :footerPosition => 'end-xs', :extraclass => 'is-static' }
      p.bx--type-p.small.u-pt-3
        | Molecule(text) + Molecule(action buttons) = Organism(modal)


    .content-block
      h2.bx--type-h4.u-text-blue.u-uppercase
        | System
      p.bx--type-p
        | Templates are formed by molecules into a page layout, articulating the system, which is everything: any digital product we are building.

    .content-block
      .row
        .col-xs-12.col-lg-8
          = image_tag 'atomic_design/template@3x.jpg', class: 'image-100'

  .footer-navigation
    .footer-navigation__previous
      = previous_link(data.title['guidelines'])
    .footer-navigation__next
      = next_link(data.title['guidelines'])
