---
page_title: Layouts
description: We believe layouts should be fluid and adaptive by default. The following grid provides the structure for LUCA’s websites and tools content, with flexible column widths and fixed gutters.
layout: content
index: true
---

.content
  h1.bx--type-h1 = current_page.data.page_title
  p.bx--type-p.description = current_page.data.description

  h2.bx--type-h4.u-text-blue Usability
  p.bx--type-p
    | When to use:
    ul.e-list
      li Almost always use a grid layout. It helps users find the information faster.
      li Choose a single grid system for your entire site or product. Meaning, avoid mixing different grid systems.

  .content-block.layout-structure
    h2.bx--type-p.u-uppercase.u-pb-4 Module’s structure, hierarchy and layout compositions
    .row.center-xs.top-xs.start-lg.u-pt-4
      .col-xs-12.col-sm-6.col-lg-2
        = svg_tag 'layout-mobile.svg', class: 'e-image-full-xs'
      .col-xs-12.col-sm-6.col-lg-3
        = svg_tag 'layout-tablet.svg', class: 'e-image-full-xs'
      .col-xs-12.col-sm-6.col-lg-4
        = svg_tag 'layout-labtop.svg', class: 'e-image-full-sm'
      .col-xs-12.col-sm-6.col-lg-3
        = svg_tag 'layout-desktop.svg', class: 'e-image-full-sm'

  .content-block
    h2.bx--type-p.u-uppercase Content structure
    .row.u-py-6
      .col-xs-7.col-md-2
        .legend-item.row.middle-xs
          span.search-bar
          p.bx--type-p Search bar
      .col-xs-5.col-md-2
        .legend-item.row.middle-xs
          span.app-nav
          p.bx--type-p App Navigation
      .col-xs-7.col-md-3
        .legend-item.row.middle-xs
          span.main-nav
          p.bx--type-p Main navigation & Sidebar
      .col-xs-5.col-md-2
        .legend-item.row.middle-xs
          span.content-l
          p.bx--type-p Content

    .row.around-xs.layout-structure
      .col-xs-12.col-center.col-sm-6.col-lg-3
        = svg_tag 'single-column-gp.svg', class: 'e-image-full-xs'
      .col-xs-12.col-center.col-sm-6.col-lg-3
        = svg_tag 'two-column-gp.svg', class: 'e-image-full-xs'
      .col-xs-12.col-center.col-sm-6.col-lg-3
        = svg_tag 'single-column-gn.svg', class: 'e-image-full-xs'
      .col-xs-12.col-center.col-sm-6.col-lg-3
        = svg_tag 'two-column-apn.svg', class: 'e-image-full-xs'

    h1.bx--type-h1 Grid & breakpoints

    p.bx--type-p.description
      | We use a grid to create a visual structure focused on quality content, rather than relying on unplanned spaces, boxes and lines. Our content and UI elements have a defined structure. Both the column widths and gutters are fixed and only scale if strictly necessary. There are 3 different types of gutter sizes to allow for different types of content: compact, cozy, and comfortable.
    h2.bx--type-h4.u-text-blue Responsive breakpoints

    .text-group
      p.bx--type-p
        | The 12/8/4 column system (desktop, tablet, mobile) is a responsive grid that provides the basis of a coherent design structure. The simplest layout is a single block of text composed of 12 columns. This layout can scale the remaining 4 or 8 columns if needed. For optimal user experience, the interfaces should adapt the layouts to the following 4 breakpoint widths: 0-768dp, 768-1280dp, 1280-1920dp and 1920dp-3000dp.
      p.bx--type-p.u-pt-4
        | Because the majority of users have the landscape configuration in their devices, our breakpoints are based on the browser’s window width.
  .content-block
    h2.bx--type-p.u-uppercase Fixed grid

    .d-flex
      .text-column
        p.bx--type-p.u-pb-4
          | 12 columns model  >  Desktop
        p.bx--type-p
          | Width 1280px - 1920 px > column width of 85px. / gutter 20-24px max.
        p.bx--type-p
          | Width 1920 -3000 px > column width max of 121 px. / gutter 36px max.

      .text-column
        p.bx--type-p
          | 8 columns  >  Tablet (landscape. On portrait use mobile grid, 4 column).
        p.bx--type-p.u-pb-4
          | Width 768px - 1280 px > 8 column width of xpx. / gutter xpx max.
        p.bx--type-p
          | 4 columns > Mobile (landscape. On portrait use 1 column).
        p.bx--type-p
          | Width 0 -768 px > 4 column.

    .content-image
      = svg_tag 'fixed-grid.svg'

    .row
      .text-column.col-xs-12.col-md-6
        h4.bx--type-h4 Minimum screen widths
        p.bx--type-p.u-pb-4
          | Layouts under 600dp wide may fill the screen with a single level of content hierarchy; either summary or detail, but not both.
        p.bx--type-p
          | Layouts over 600dp wide may have two levels of content hierarchy; both summary and detail content.

      .text-column.col-xs-12.col-md-6
        h4.bx--type-h4 Max screen widths
        p.bx--type-p.u-pb-4
          | Layouts over 1600dp wide may expand until it hits a maximum width. At this point, the grid may:
        ul.e-list
          li Align in the center with increased margins
          li Remain aligned to the left while the right margin expands
          li Continue to expand while revealing additional content

    .content-image
      = svg_tag 'layout-grid02.svg'

  .footer-navigation
    .footer-navigation__previous
      = previous_link(data.title['guidelines'])
    .footer-navigation__next
      = next_link(data.title['guidelines'])

  .action.downloads
    = partial :"components/_downloads", :locals => { :name => 'gridandlayouts_DS_LUCA', :sketch => true }
    = partial :"components/_downloads", :locals => { :name => 'gridandlayouts_DS_LUCA', :pdf => true }
