---
page_title: Adopting a Design System
description: Our main goal is to create valuable friendly experiences for our users. The LUCA Design System is functional, well documented, and allows for gradual adoption. From the principles to the language and materials, we provide everything you’ll need to build high-quality digital experiences.

layout: content
index: true
---

.p-adopting.content
  h1.bx--type-h1 = current_page.data.page_title
  p.bx--type-p = current_page.data.description

  picture.image-block
    = image_tag 'adopting-overview.png'

  p.bx--type-p.text-light.u-pt-4
    | LDS gathers our style guide, visualisation rules, as well as elements and components that underpin LUCA’s Product Portfolio in order to create a unified language and consistent look.

  .content-block.u-pt-5
    h2.bx--type-h4 Steps
    p.bx--type-p
      | The Design System is adopted according to the product through gradual steps. They serve as milestones to track the adoption process no matter the pace of the different product teams.

    .steps-header
      h3.bx--type-h4.u-uppercase.u-text-blue Step
      h3.bx--type-h4.u-uppercase.u-text-blue Criteria

    .steps-container
      .step-block
        = image_tag 'steps/step-1.png';
        p.bx--type-p
          | Identify the problem
        p.bx--type-p
          | Non-adopter

      .criteria-block
        ul.e-list
          li Branding/visual language is out of date.
          li Product is not complying with the System.
          li Interface is out of date and inconsistent with the latest conventions.

      .step-block
        = image_tag 'steps/step-2.png';
        h2.bx--type-h4.u-uppercase Step 1
        p.bx--type-p
          | Plan: Backlog and roadmap

      .criteria-block
        ul.e-list
          li Review codebase dependency.
          li Asset compilation and redesign if necessary, to ensure integration.
          li Commitment and rules for process adoption.

      .step-block
        = image_tag 'steps/step-3.png';
        h2.bx--type-h4.u-uppercase Step 2
        p.bx--type-p
          | Basics: Visual language

      .criteria-block
        ul.e-list
          li Lines, spaces-margins, colour & typography.
          li Review illustrations, pictures and iconography.
          li Primary UI structure-components: navigation icons, nav. bar, header and footer.

      .step-block
        = image_tag 'steps/step-4.png'
        h2.bx--type-h4.u-uppercase Step 3
        p.bx--type-p
          | Plan: Basic UI components

      .criteria-block
        ul.e-list
          li Buttons, primary, secondary, radio, check, switch and select.
          li Forms: labels, text fields.
          li List groups and data tablets.

      .step-block
        = image_tag 'steps/step-5.png';
        h2.bx--type-h4.u-uppercase Step 4
        p.bx--type-p
          | Plan: High-priority components

      .criteria-block
        ul.e-list
          li Cards, tooltips & modals.
          li Notifications & Alerts system.
          li Dialog, chat & FAQ.

      .step-block
        = image_tag 'steps/step-6.png'
        h2.bx--type-h4.u-uppercase Step 5
        p.bx--type-p
          | Plan: Full adoption

      .criteria-block
        ul.e-list
          li Basic charts.
          li Simple visualisations.
          li Complex visualisation.

      .step-block
        = image_tag 'steps/step-7.png'
        h2.bx--type-h4.u-uppercase Step 6
        p.bx--type-p
          | Plan: Extra materials

      .criteria-block
        ul.e-list
          li Onboarding.
          li Walkthrough.
          li Tutorials (motion).
          li Documentation.

    h1.bx--type-h1 Atomic design
    p.bx--type-p.u-pb-5
      | The objective of our Atomic Design is to organize components according to their hierarchy in order to build well-constructed interfaces. It helps developers to build the code in an easy and structured way. In addition, it helps designers to identify and solve problems when the design is being programmed.

    .content-block
      h2.bx--type-h4
        | Atomic hierarchy
      p.bx--type-p
        | From the smallest element to the largest (more elements will be added if necessary).

    .content-block
      .row.center-xs.around-xs
        .col-xs-6.col-sm-2
          = image_tag 'atomic_design/atom@3x.png', class: 'image-100'
          p.bx--type-note_light.u-uppercase.u-pt-3
            | Atom

        .col-xs-6.col-sm-2
          = image_tag 'atomic_design/molecule@3x.png', class: 'image-100'
          p.bx--type-note_light.u-uppercase.u-pt-3
            | Molecule

        .col-xs-6.col-sm-2
          = image_tag 'atomic_design/organism.png', class: 'image-100'
          p.bx--type-note_light.u-uppercase.u-pt-3
            | Organism

        .col-xs-6.col-sm-2
          = image_tag 'atomic_design/system@3x.png', class: 'image-100'
          p.bx--type-note_light.u-uppercase.u-pt-3
            | System


    .content-block
      h2.bx--type-h4.u-text-blue.u-uppercase
        | Atoms
      p.bx--type-p
        | Atoms are the smallest elements of the hierarchy. An atom needs other elements in order to function properly. An atom should be named, defined and enclosed with margins.

    .content-block
      .row
        .col-xs-12.col-sm-4.col-lg-2
          = link_to 'ok', '#', class: 'c-btn btn-primary btn-small'
          p.bx--type-p.small.u-pt-3
            | Atom (button)

    .content-block
      h2.bx--type-h4.u-text-blue.u-uppercase
        | Molecules
      p.bx--type-p
        | Molecules are created when two or more atoms come together. Because it offers enough information to guide an action within the interface. It is, in fact, the first element in the hierarchy that can be used by itself. A molecule must be defined and enclosed within margins.

    .content-block
      .row.actions
        = link_to 'cancel', '#', class: 'c-btn btn-primary inverse btn-small'
        = link_to 'ok', '#', class: 'c-btn btn-primary btn-small'
      p.bx--type-p.small.u-pt-3
        | Atom (button) + Atom (button) = Molecule

    .content-block
      h2.bx--type-h4.u-text-blue.u-uppercase
        | Organisms
      p.bx--type-p
        | They are formed by two or more molecules and constitute a section or part of the product.

    .content-block
      .row
        .col-xs-12
          == partial :"components/_modal", :locals => { :id => 'example', :close => true, :text => 'Donec facilisis tortor ut augue lacinia, at viverra est semper. Sed sapien metus, scelerisque nec pharetra id, tempor a tortor. Pellentesque non dignissim neque. Ut porta viverra est, ut dignissim elit elementum ut. Nunc vel rhoncus nibh, ut tincidunt turpis. Integer ac enim pellentesque, adipiscing metus id, pharetra odio. ', :heading => 'Welcome to your account', :textlabel => 'LUCA Comms', :check => false, :btnTxt => 'Ok', :secondbtnTxt => 'Cancel', :secondbtn => true, :footerPosition => 'end-xs', :extraclass => 'is-static' }
      p.bx--type-p.small.u-pt-3
        | Molecule (text) + Molecule (action buttons) = Organism (modal)


    .content-block
      h2.bx--type-h4.u-text-blue.u-uppercase
        | System
      p.bx--type-p
        | Molecules form the templates that later become the page’s layout. Thus, articulating the System of any digital product we build.

    .content-block
      .row
        .col-xs-12.col-lg-8
          = image_tag 'atomic_design/template@3x.jpg', class: 'image-100'

  .footer-navigation
    .footer-navigation__previous
      = previous_link(data.title['guidelines'])
    .footer-navigation__next
      = next_link(data.title['guidelines'])
